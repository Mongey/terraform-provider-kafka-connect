version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Mongey/terraform-provider-kafka-connect
    docker:
      - image: circleci/golang:1.12
        environment:
          TEST_RESULTS: /tmp/test-results
          GO111MODULE: "on"
      - image: confluentinc/cp-zookeeper:latest
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      - image: confluentinc/cp-kafka:4.0.0-2
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      - image: confluentinc/cp-kafka-connect:4.0.0-2
        environment:
          CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://localhost:9092
          CONNECT_GROUP_ID: connect
          CONNECT_REST_PORT: 8083
          CONNECT_CONFIG_STORAGE_TOPIC: "quickstart-config"
          CONNECT_OFFSET_STORAGE_TOPIC: "quickstart-offsets"
          CONNECT_STATUS_STORAGE_TOPIC: "quickstart-status"
          CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
          CONNECT_PLUGIN_PATH: /usr/share/java
          CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
          CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
          CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go build
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts:
          path: /go/src/github.com/Mongey/terraform-provider-kafka-connect/terraform-provider-kafka
          destination: terraform-provider-kafka-connect
      - run: make test
      - run: go get github.com/jstemmer/go-junit-report
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: Wait for connect
          command: |
            until $(curl --output /dev/null --silent --head --fail http://localhost:8083); do
              printf '.'
              sleep 5
            done
      - run:
          name: Run Tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make testacc| tee ${TEST_RESULTS}/go-test.out
      - store_test_results:
          path: /tmp/test-results
